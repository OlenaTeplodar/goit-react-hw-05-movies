{"version":3,"file":"static/js/266.2026d38d.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,EAAH,8D,SCQtB,EARc,WACZ,OACE,SAACD,EAAD,8EAIH,C,wGCLYE,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iIAUVG,EAAaH,EAAAA,GAAAA,GAAH,oFAMVI,EAAcJ,EAAAA,GAAAA,GAAH,2E,SCflBK,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACR,EAAD,WACE,SAACF,EAAD,CAAYW,MAAO,CAAEC,KAAMN,GAAYO,GAAE,kBAAaJ,GAAtD,SACGC,KAFYD,EADP,KASjB,EAED,IAEAL,EAAWU,aAAe,CACxBC,MAAO,G,4KC0BT,EAzCuB,WACrB,OAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAW,GAFK,UAGKK,EAAAA,EAAAA,MAHL,OAGVC,EAHU,OAIhBR,EAASQ,GAJO,gDAMhBJ,EAAS,KAAMK,SANC,yBAQhBP,GAAW,GARK,4EAAH,qDAYjBI,GACD,GAAE,KAGD,4BACE,SAAC,KAAD,CACEI,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,aAAc,CAAC,EACfC,aAAa,GACbC,QAASd,IAAW,EACpBe,UAAU,yBACVC,iBAAiB,UACjBC,iBAAiB,UACjBC,kBAAkB,YAEnBhB,IAAS,SAACiB,EAAA,EAAD,IACThC,EAAOiC,OAAS,IAAK,SAAClC,EAAA,EAAD,CAAYC,OAAQA,MAG/C,E,SC7CYkC,E,QAAYxC,GAAAA,GAAH,mFCatB,EAXiB,WACf,OACE,2BACE,4BACE,SAACwC,EAAD,8BACA,SAAC,EAAD,QAIP,C,yLCTKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALQ,mCAMRC,SAAU,WAIDrB,EAAiB,mCAAG,sGACRgB,EAASM,IAAI,8BADL,uBACvBC,EADuB,EACvBA,KADuB,kBAExBA,EAAKC,SAFmB,2CAAH,qDAKjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNV,EAASM,IAAT,8BACEI,EADF,gCADM,uBACrBH,EADqB,EACrBA,KADqB,kBAItBA,EAAKC,SAJiB,2CAAH,sDAOfG,EAAgB,mCAAG,WAAM1C,GAAN,yFACP+B,EAASM,IAAT,iBAAuBrC,IADhB,uBACtBsC,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBK,EAAgB,mCAAG,WAAM3C,GAAN,yFACP+B,EAASM,IAAT,iBAAuBrC,EAAvB,aADO,uBACtBsC,EADsB,EACtBA,KADsB,kBAEvBA,EAAKM,MAFkB,2CAAH,sDAKhBC,EAAgB,mCAAG,WAAM7C,GAAN,yFACP+B,EAASM,IAAT,iBAAuBrC,EAAvB,oBADO,uBACtBsC,EADsB,EACtBA,KADsB,kBAEvBA,EAAKC,SAFkB,2CAAH,qD","sources":["components/Error/error.styled.js","components/Error/Error.jsx","components/MoviesList/moviesList.styled.js","components/MoviesList/MoviesList.jsx","components/TrendingMovies/TrendingMovies.jsx","components/Pages/HomePage/homePage.styled.js","components/Pages/HomePage/HomePage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: tomato;\n  font-size: 24px;\n`;\n","import { ErrorText } from './error.styled';\n\nconst Error = () => {\n  return (\n    <ErrorText>\n      Oops...Something went wrong, reload the page or try again later!\n    </ErrorText>\n  );\n};\n\nexport default Error;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n  font-size: 20px;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const MoviesItem = styled.li`\n  list-style: none;\n  padding: 4px;\n  margin-left: 16px;\n`;\n\nexport const MoviesLists = styled.ul`\n  display: flex;\n  gap: 20px;\n  display: block;\n`;\n","import { useLocation } from 'react-router-dom';\n\nimport { MoviesLink, MoviesLists, MoviesItem } from './moviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesLists>\n      {movies.map(({ id, title }) => (\n        <MoviesItem key={id}>\n          <MoviesLink state={{ from: location }} to={`/movies/${id}`}>\n            {title}\n          </MoviesLink>\n        </MoviesItem>\n      ))}\n    </MoviesLists>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n","import { useState, useEffect } from 'react';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Error from 'components/Error/Error';\n\nimport { getMoviesTrending } from '../../services/moviesApi';\n\nconst TrendingMovies = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setLoading(true);\n        const result = await getMoviesTrending();\n        setMovie(result);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <ThreeCircles\n        height=\"100\"\n        width=\"100\"\n        color=\"#2642dd\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={loading && true}\n        ariaLabel=\"three-circles-rotating\"\n        outerCircleColor=\"#6478eb\"\n        innerCircleColor=\"#424f99\"\n        middleCircleColor=\"#031992\"\n      />\n      {error && <Error />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default TrendingMovies;\n","import styled from 'styled-components';\n\nexport const TitleList = styled.h2`\n  font-size: 24px;\n  color: green;\n  margin-left: 48px;\n`;\n","import TrendingMovies from '../../TrendingMovies/TrendingMovies';\n\nimport { TitleList } from './homePage.styled';\n\nconst HomePage = () => {\n  return (\n    <main>\n      <div>\n        <TitleList>Trending today</TitleList>\n        <TrendingMovies />\n      </div>\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst KEY = '2e28e0889deced997fe5d570fd3e41df';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-us',\n  },\n});\n\nexport const getMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day?page=1');\n  return data.results;\n};\n\nexport const getMoviesSearch = async query => {\n  const { data } = await instance.get(\n    `/search/movie?query=${query}&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCasting = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews?page=1`);\n  return data.results;\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=2e28e0889deced997fe5d570fd3e41df\n"],"names":["ErrorText","styled","MoviesLink","Link","MoviesItem","MoviesLists","MoviesList","movies","location","useLocation","map","id","title","state","from","to","defaultProps","items","useState","setMovie","loading","setLoading","error","setError","useEffect","fetchMovies","getMoviesTrending","result","massage","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","outerCircleColor","innerCircleColor","middleCircleColor","Error","length","TitleList","instance","axios","baseURL","params","api_key","language","get","data","results","getMoviesSearch","query","getMoviesDetails","getMoviesCasting","cast","getMoviesReviews"],"sourceRoot":""}